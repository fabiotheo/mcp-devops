{
  "permissions": {
    "allow": [
      "Bash(tree:*)",
      "Bash(~/.local/bin/ipcom-chat:*)",
      "Read(//Users/fabiotheodoro/**)",
      "mcp__zen__planner",
      "Bash(xargs -I {} cp {} backup-interface/)",
      "Bash(pnpm add:*)",
      "mcp__zen__codereview",
      "Bash(timeout 1 node:*)",
      "Bash(node:*)",
      "Bash(chmod:*)",
      "Bash(./interface-v2/test-new-interface.sh:*)",
      "Bash(pnpm list:*)",
      "Bash(timeout 5 ./interface-v2/test-new-interface.sh:*)",
      "Bash(timeout:*)",
      "Bash(./interface-v2/test-real-integration.sh:*)",
      "Bash(ln:*)",
      "Bash(./interface-v2/test-installed.sh:*)",
      "mcp__zen__debug",
      "Bash(git checkout:*)",
      "Bash(./test-claude-interface.sh:*)",
      "Bash(./test-new-interface.sh:*)",
      "Bash(printf:*)",
      "Bash(tee:*)",
      "mcp__octocode__githubSearchCode",
      "mcp__octocode__githubGetFileContent",
      "mcp__octocode__githubSearchRepositories",
      "mcp__zen__analyze",
      "Bash(./test-paste-detection.sh:*)",
      "mcp__octocode__githubViewRepoStructure",
      "Bash(echo:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(xargs:*)",
      "Bash(./ipcom-chat history:*)",
      "Bash(DEBUG=1 ./ipcom-chat history --user testuser --limit 2)",
      "Bash(DEBUG=1 ./ipcom-chat history --user testuser --limit 1)",
      "Bash(env:*)",
      "Bash(MCP_USER=testuser node mcp-claude-with-user.js)",
      "Bash(pnpm approve-builds:*)",
      "Bash(pnpm rebuild:*)",
      "Bash(npm rebuild:*)",
      "Bash(sqlite3:*)",
      "Bash(npm install:*)",
      "Bash(MCP_USER=fabio timeout 2 node interface-v2/mcp-ink-cli.mjs)",
      "Bash(export MCP_USER=fabio)",
      "Bash(pbcopy)",
      "Bash(./test-ctrl-c.sh:*)",
      "Bash(MCP_USER=fabio node interface-v2/mcp-ink-cli.mjs)",
      "Bash(MCP_USER=fabio node interface-v2/mcp-ink-cli.mjs --debug)",
      "Bash(killall:*)",
      "Bash(pkill:*)",
      "Bash(MCP_USER=fabio timeout 30 node interface-v2/mcp-ink-cli.mjs --debug)",
      "Bash(./test-history-fix.sh:*)",
      "Bash(./test-context-preservation.sh:*)",
      "Bash(./testar-agora.sh:*)"
    ],
    "deny": [],
    "ask": []
  }
}